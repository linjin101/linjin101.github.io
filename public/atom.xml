<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>程序猿非猿的博客</title>
  <subtitle>珠宝盈屋防人偷,夜不能寐日日愁,何如满腹书卷在,福慧双修路路酬</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://linjin101.com/"/>
  <updated>2017-03-07T12:46:29.024Z</updated>
  <id>http://linjin101.com/</id>
  
  <author>
    <name>linjin101</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo本地测试运行重启后页面空白,提示 : WARN No layout: index.html</title>
    <link href="http://linjin101.com/2017/03/07/hexo%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95%E8%BF%90%E8%A1%8C%E9%87%8D%E5%90%AF%E5%90%8E%E9%A1%B5%E9%9D%A2%E7%A9%BA%E7%99%BD-%E6%8F%90%E7%A4%BA-WARN-No-layout-index-html/"/>
    <id>http://linjin101.com/2017/03/07/hexo本地测试运行重启后页面空白-提示-WARN-No-layout-index-html/</id>
    <published>2017-03-07T04:44:35.000Z</published>
    <updated>2017-03-07T12:46:29.024Z</updated>
    
    <content type="html"><![CDATA[<p>运行git clone 指令获得主题后（假设是NEXT主题），在theme主题下保存文件夹的名称为：hexo-theme-next-0.4.0<br>那么如果在config里设置的是next，就会出现这样的WARN，<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a><br>显示的是空白。只要把theme下的文件夹名称改为next就显示正常了.要么就是获取的样式文件夹是空的,需要重新下载.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;运行git clone 指令获得主题后（假设是NEXT主题），在theme主题下保存文件夹的名称为：hexo-theme-next-0.4.0&lt;br&gt;那么如果在config里设置的是next，就会出现这样的WARN，&lt;a href=&quot;http://localhost:400
    
    </summary>
    
      <category term="hexo" scheme="http://linjin101.com/categories/hexo/"/>
    
    
      <category term="hexo空白" scheme="http://linjin101.com/tags/hexo%E7%A9%BA%E7%99%BD/"/>
    
      <category term="hexo本地测试" scheme="http://linjin101.com/tags/hexo%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>HTML4和HTML5的10个关键区别</title>
    <link href="http://linjin101.com/2017/03/07/HTML4%20%E5%92%8C%20HTML5%20%E7%9A%8410%E4%B8%AA%E5%85%B3%E9%94%AE%E5%8C%BA%E5%88%AB/"/>
    <id>http://linjin101.com/2017/03/07/HTML4 和 HTML5 的10个关键区别/</id>
    <published>2017-03-06T16:33:14.000Z</published>
    <updated>2017-03-07T12:46:29.024Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://static.oschina.net/uploads/files/html5.png" alt="image">HTML5是HTML标准的下一个版本。<br>越来越多的程序员开始HTML5来构建网站。 如果你同时使用HTML4和HTML5的话，你会发现用HTML5从头构建，<br>比从HTML4迁移到HTML5要方便很多。 虽然HTML5没有完全颠覆HTML4，它们还是有很多相似之处，但是它们</p>
<h2 id="也有一些关键的不同。本文就列出了它们之间10个关键的不同之处。"><a href="#也有一些关键的不同。本文就列出了它们之间10个关键的不同之处。" class="headerlink" title="也有一些关键的不同。本文就列出了它们之间10个关键的不同之处。"></a>也有一些关键的不同。本文就列出了它们之间10个关键的不同之处。</h2><h4 id="1-HTML5-标准还在制定中"><a href="#1-HTML5-标准还在制定中" class="headerlink" title="1. HTML5 标准还在制定中"></a>1. HTML5 标准还在制定中</h4><p>首先要注意的是，HTML5虽然现在很火，但是HTML5标准还在制定中，标准仍在改变。HTML4已经10多年了，不会有任何改变了。</p>
<h4 id="2-简化的语法"><a href="#2-简化的语法" class="headerlink" title="2. 简化的语法"></a>2. 简化的语法</h4><p>HTML5简化了很多细微的语法，例如doctype的声明，你只需要写!doctype html就行了。HTML5与HTML5，XHTML1兼容，但是与SGML不兼容。</p>
<h4 id="3-canvas-标签替代Flash"><a href="#3-canvas-标签替代Flash" class="headerlink" title="3. canvas 标签替代Flash"></a>3. canvas 标签替代Flash</h4><p>Flash给很多Web开发者带来了麻烦，要在网页上播放Flash需要一堆代码和插件。canvas标签使得开发者只要使用一个标签就 能和用户产生UI交互。虽然目前canvas标签还不能实现Flash的所有功能，但是很快canvas就会让 Flash看起来老土，哈哈！</p>
<h4 id="4-新增-heade-和-footer-标签"><a href="#4-新增-heade-和-footer-标签" class="headerlink" title="4. 新增 heade 和 footer 标签"></a>4. 新增 heade 和 footer 标签</h4><p>HTML5设计的一个原则是更好的体现网站的语义性，所以增加了header和footer这样的标签，用来明确表示网页的结构。</p>
<h4 id="5-新增-section-和-article-标签"><a href="#5-新增-section-和-article-标签" class="headerlink" title="5. 新增 section 和 article 标签"></a>5. 新增 section 和 article 标签</h4><p>与 header , footer类似，section和article也有利于清晰化网页的结构，更有利于SEO。</p>
<h4 id="6-新增-menu-和-figure-标签"><a href="#6-新增-menu-和-figure-标签" class="headerlink" title="6. 新增 menu 和 figure 标签"></a>6. 新增 menu 和 figure 标签</h4><p>menu可以被用于创建传统的菜单，也可以用于工具栏和上下文菜单。figure标签使得网页文字和图片的排版更专业。</p>
<h4 id="7-新增-audio-和-video-标签"><a href="#7-新增-audio-和-video-标签" class="headerlink" title="7. 新增 audio 和 video 标签"></a>7. 新增 audio 和 video 标签</h4><p>这两个标签可能是HTML5里面最有用的两个标签了。顾名思义，这两个标签是用来播放音频和视频的。</p>
<h4 id="8-全新的表单"><a href="#8-全新的表单" class="headerlink" title="8. 全新的表单"></a>8. 全新的表单</h4><p>HTML5对 form 和 forminput 标签进行了大量修改，添加了很多新的属性，也修改了很多属性。</p>
<h4 id="9-删除-b-和-font-标签"><a href="#9-删除-b-和-font-标签" class="headerlink" title="9. 删除 b 和 font 标签"></a>9. 删除 b 和 font 标签</h4><p>这个改进我还无法理解。我不认为删除这两个标签对代码的改进有很大的帮助。官方的解释是应该用CSS来替代这两个标签。但我还是觉得对于简单的文本，这两个标签还是很方便的。</p>
<h4 id="10-删除-frame-center-big-标签"><a href="#10-删除-frame-center-big-标签" class="headerlink" title="10. 删除 frame , center , big 标签"></a>10. 删除 frame , center , big 标签</h4><p>我已经记不得上次是什么时候使用这些标签了。</p>
<p>以上十点只是HTML5和HTML4差别的很小一部分，最<br>新最全的HTML5-HTML4对比信息请看 <a href="http://dev.w3.org/html5/html4-differences/" target="_blank" rel="external">http://dev.w3.org/html5/html4-differences/</a></p>
<hr>
<p>文章转载自 开源中国社区 [<a href="http://www.oschina.net" target="_blank" rel="external">http://www.oschina.net</a>]<br>本文标题：HTML4 和 HTML5 的10个关键区别<br>本文地址：<a href="https://www.oschina.net/news/22219/html4-html5-differences" target="_blank" rel="external">https://www.oschina.net/news/22219/html4-html5-differences</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/files/html5.png&quot; alt=&quot;image&quot;&gt;HTML5是HTML标准的下一个版本。&lt;br&gt;越来越多的程序员开始HTML5来构建网站。 如果你同时使用HTML4和HTML5
    
    </summary>
    
      <category term="HTML" scheme="http://linjin101.com/categories/HTML/"/>
    
    
      <category term="HTML4" scheme="http://linjin101.com/tags/HTML4/"/>
    
      <category term="HTML5" scheme="http://linjin101.com/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title>blog-frist hexo配置问题</title>
    <link href="http://linjin101.com/2017/03/07/blog-frist%20hexo%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/"/>
    <id>http://linjin101.com/2017/03/07/blog-frist hexo配置问题/</id>
    <published>2017-03-06T16:33:14.000Z</published>
    <updated>2017-03-07T12:46:29.024Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://note.youdao.com/" target="_blank" rel="external">https://www.zhihu.com/question/38219432</a></p>
<p>贴上一篇我之前搭建博客时，参考的教程</p>
<h2 id="引用自：Xuanwo’s-Blog-史上最详细的Hexo博客搭建图文教程"><a href="#引用自：Xuanwo’s-Blog-史上最详细的Hexo博客搭建图文教程" class="headerlink" title="引用自：Xuanwo’s Blog// 史上最详细的Hexo博客搭建图文教程 "></a>引用自：Xuanwo’s Blog// 史上最详细的Hexo博客搭建图文教程 </h2><p>配置Deployment首先，你需要为自己配置身份信息，打开命令行，然后输入：<br>git config –global user.name “yourname”<br>git config –global user.email “youremail”<br>同样在_config.yml文件中，找到Deployment，然后按照如下修改：<br>deploy:<br>type: git<br>repo: git@github.com:yourname/yourname.github.io.git<br>branch: master<br>如果使用git方式进行部署，执行npm install hexo-deployer-git –save来安装所需的插件<br>然后在当前目录打开命令行，输入：<br>hexo d</p>
<h2 id="随后按照提示，分别输入自己的Github账号用户名和密码，开始上传。"><a href="#随后按照提示，分别输入自己的Github账号用户名和密码，开始上传。" class="headerlink" title="随后按照提示，分别输入自己的Github账号用户名和密码，开始上传。"></a>随后按照提示，分别输入自己的Github账号用户名和密码，开始上传。</h2><p>你看看会不会是这边的配置出现了问题。</p>
<p>作者：孙武军<br>链接：<a href="https://www.zhihu.com/question/38219432/answer/75389052" target="_blank" rel="external">https://www.zhihu.com/question/38219432/answer/75389052</a><br>来源：知乎<br>著作权归作者所有，转载请联系作者获得授权。</p>
<p>=======================================================</p>
<p>提交项目，部署</p>
<p>继续在本目录命令行<br>安装部署工具（方便以后更新）<br><code>npm install hexo-deployer-git -save</code><br>1、初始化本地仓库：<br><code>git init</code><br>2、连接远程仓库：<br>如果是第一次使用git，在使用git的时候会提示输入用户名和密码，用户名是自己的注册邮箱。<br><code>git remote add origin https://github.com/wapchief/wapchief.github.io.git</code><br>3、发布hexo到github page<br><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code><br>4、添加文件到本地仓库<br><code>git add</code><br>5、提交声明<br><code>git commit -m &#39;内容&#39;</code><br>6、推送到远程仓库（github）<br><code>git push origin</code><br>这里建议创建一个新的分支hexo，用于管理hexo文件。   提交的的时候只提交hexo网站html、css、等源文件。而默认的master用来部署更新项目,具体可以看我的github地址分支情况<a href="https://github.com/wapchief/wapchief.github.io" target="_blank" rel="external">https://github.com/wapchief/wapchief.github.io</a><br>创建并切换到新建分支：<br>git checkout -b hexo<br>将分支推送到远程仓库：<br>git push origin hexo<br>这时打开网站就能看到效果了。<br>记得提交以后去github上把hexo分支设置默认，以后写文章等都要部署。<br>文章在hexo目录下的\source_posts文件夹中，是md格式，也就是Markdown格式。<br>以后可以用以下命令部署。也就是第三步</p>
<p>//等于一次性执行了，清空、刷新、部署三个命令<br><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code><br>如果部署时不clean，可能之前修改的文章还存在。包括一些配置等，有时候部署完成后并没有改变，其实是缓存未清除。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://note.youdao.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.zhihu.com/question/38219432&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;贴上一篇我之前搭建博客时，参考的教程&lt;/p
    
    </summary>
    
      <category term="hexo" scheme="http://linjin101.com/categories/hexo/"/>
    
    
      <category term="hexo配置问题" scheme="http://linjin101.com/tags/hexo%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>hexo部署后，CNAME会被自动删除，怎么办？</title>
    <link href="http://linjin101.com/2017/03/07/hexo%E9%83%A8%E7%BD%B2%E5%90%8E%EF%BC%8CCNAME%E4%BC%9A%E8%A2%AB%E8%87%AA%E5%8A%A8%E5%88%A0%E9%99%A4%EF%BC%8C%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F/"/>
    <id>http://linjin101.com/2017/03/07/hexo部署后，CNAME会被自动删除，怎么办？/</id>
    <published>2017-03-06T16:33:14.000Z</published>
    <updated>2017-03-07T12:46:29.024Z</updated>
    
    <content type="html"><![CDATA[<p>将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等。</p>
<p>如图：<br>CNAME README都可以放在Source文件夹下，每次上传就不会消失了</p>
<p><img src="https://pic4.zhimg.com/93a311be4f651f8cd639233e544b826b_b.jpg" alt="image"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等。&lt;/p&gt;
&lt;p&gt;如图：&lt;br&gt;CNAME README都可以放在Source文件夹下，每次上传就不会消失了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pic
    
    </summary>
    
      <category term="hexo" scheme="http://linjin101.com/categories/hexo/"/>
    
    
      <category term="hexo部署" scheme="http://linjin101.com/tags/hexo%E9%83%A8%E7%BD%B2/"/>
    
      <category term="CNAME" scheme="http://linjin101.com/tags/CNAME/"/>
    
  </entry>
  
  <entry>
    <title>在github上创建新分支</title>
    <link href="http://linjin101.com/2017/03/07/%E5%9C%A8github%E4%B8%8A%E5%88%9B%E5%BB%BA%E6%96%B0%E5%88%86%E6%94%AF/"/>
    <id>http://linjin101.com/2017/03/07/在github上创建新分支/</id>
    <published>2017-03-06T16:33:14.000Z</published>
    <updated>2017-03-07T12:46:29.024Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://note.youdao.com/" target="_blank" rel="external">http://blog.csdn.net/guang11cheng/article/details/37757201</a><br><a href="http://note.youdao.com/" target="_blank" rel="external">http://blog.csdn.net/top_code/article/details/51931916</a><br><a href="http://note.youdao.com/" target="_blank" rel="external">http://www.cnblogs.com/horanly/p/6265182.html
</a></p>
<p>在github上创建仓库：<br><code>Create a new repository on the command line</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">touch README.md</div><div class="line">git init</div><div class="line">git add README.md</div><div class="line">git commit -m &quot;first commit&quot;</div><div class="line">git remote add origin https://github.com/BrentHuang/MyRepo.git</div><div class="line">git push -u origin master</div></pre></td></tr></table></figure>
<p>在本地新建一个分支： <code>git branch Branch1</code><br>切换到你的新分支: <code>git checkout Branch1</code><br>将新分支发布在github上： <code>git push origin Branch1</code><br>在本地删除一个分支： <code>git branch -d Branch1</code><br>在github远程端删除一个分支： <code>git push origin :Branch1</code><br>(分支名前的冒号代表删除)</p>
<p>直接使用git pull和git push的设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Git branch --set-upstream-to=origin/master master </div><div class="line">git branch --set-upstream-to=origin/ThirdParty ThirdParty</div><div class="line">git config --global push.default matching</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://note.youdao.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/guang11cheng/article/details/37757201&lt;/a&gt;&lt;br&gt;&lt;a hre
    
    </summary>
    
      <category term="git" scheme="http://linjin101.com/categories/git/"/>
    
    
      <category term="github" scheme="http://linjin101.com/tags/github/"/>
    
      <category term="创建分" scheme="http://linjin101.com/tags/%E5%88%9B%E5%BB%BA%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>github配置</title>
    <link href="http://linjin101.com/2017/03/06/git%E6%97%A0%E6%B3%95pull%E4%BB%93%E5%BA%93/"/>
    <id>http://linjin101.com/2017/03/06/git无法pull仓库/</id>
    <published>2017-03-06T15:46:55.000Z</published>
    <updated>2017-03-07T12:46:29.024Z</updated>
    
    <content type="html"><![CDATA[<p>git无法pull仓库refusing to merge unrelated histories</p>
<p><a href="http://note.youdao.com/" target="_blank" rel="external">http://blog.csdn.net/lindexi_gd/article/details/52554159</a></p>
<p>本文讲的是把Git在最新2.9.2，合并pull两个不同的项目，出现的问题如何去解决fatal: refusing to merge unrelated histories</p>
<p>我在Github新建一个仓库，写了License，然后把本地一个写了很久仓库上传。</p>
<p>先pull，因为两个仓库不同，发现refusing to merge unrelated histories，无法pull</p>
<p>因为他们是两个不同的项目，要把两个不同的项目合并，git需要添加一句代码，在git pull，这句代码是在git 2.9.2版本发生的，最新的版本需要添加–allow-unrelated-histories</p>
<p>假如我们的源是origin，分支是master，那么我们 需要这样写<br><code>git pull origin master --allow-unrelated-histories</code><br>需要知道，我们的源可以是本地的路径</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;git无法pull仓库refusing to merge unrelated histories&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://note.youdao.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn
    
    </summary>
    
      <category term="hexo" scheme="http://linjin101.com/categories/hexo/"/>
    
    
      <category term="github报错" scheme="http://linjin101.com/tags/github%E6%8A%A5%E9%94%99/"/>
    
  </entry>
  
  <entry>
    <title>hexo安装配置</title>
    <link href="http://linjin101.com/2017/03/06/hexo%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>http://linjin101.com/2017/03/06/hexo安装配置/</id>
    <published>2017-03-06T15:46:55.000Z</published>
    <updated>2017-03-07T12:46:29.024Z</updated>
    
    <content type="html"><![CDATA[<p>win10安装报错,提示需要管理员账户.<br>后来修改权限半天,而且也切换管理员账户还是出错.误解搜索错误解决办法,最后替换淘宝的源解决问题.<br>报错:</p>
<pre><code>$ npm install hexo-cli -g
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules\hexo-cli\node_modules\chokidar\node_modules\fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.1: wanted {&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;} (current: {&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;})
npm ERR! Windows_NT 10.0.14393
npm ERR! argv &quot;D:\\nodejs\\node.exe&quot; &quot;D:\\nodejs\\node_modules\\npm\\bin\\npm-cli.js&quot; &quot;install&quot; &quot;hexo-cli&quot; &quot;-g&quot;
npm ERR! node v6.10.0
npm ERR! npm  v3.10.10
npm ERR! path C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli
npm ERR! code EPERM
npm ERR! errno -4048
npm ERR! syscall rename

npm ERR! Error: EPERM: operation not permitted, rename &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli&apos; -&gt; &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\.hexo-cli.DELETE&apos;
npm ERR!     at moveAway (D:\nodejs\node_modules\npm\lib\install\action\finalize.js:38:5)
npm ERR!     at destStatted (D:\nodejs\node_modules\npm\lib\install\action\finalize.js:27:7)
npm ERR!     at D:\nodejs\node_modules\npm\node_modules\graceful-fs\polyfills.js:267:18
npm ERR!     at FSReqWrap.oncomplete (fs.js:123:15)
npm ERR!
npm ERR! Error: EPERM: operation not permitted, rename &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli&apos; -&gt; &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\.hexo-cli.DELETE&apos;
npm ERR!     at Error (native)
npm ERR!  Error: EPERM: operation not permitted, rename &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli&apos; -&gt; &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\.hexo-cli.DELETE&apos;
npm ERR!     at moveAway (D:\nodejs\node_modules\npm\lib\install\action\finalize.js:38:5)
npm ERR!     at destStatted (D:\nodejs\node_modules\npm\lib\install\action\finalize.js:27:7)
npm ERR!     at D:\nodejs\node_modules\npm\node_modules\graceful-fs\polyfills.js:267:18
npm ERR!     at FSReqWrap.oncomplete (fs.js:123:15)
npm ERR!
npm ERR! Error: EPERM: operation not permitted, rename &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli&apos; -&gt; &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\.hexo-cli.DELETE&apos;
npm ERR!     at Error (native)
npm ERR!
npm ERR! Please try running this command again as root/Administrator.

npm ERR! Please include the following file with any support request:
npm ERR!     E:\git\hexo\npm-debug.log
</code></pre><p>后来执行下面语句安装成功hexo<br><code>npm install -g hexo --registry=https://registry.npm.taobao.org</code></p>
<p>淘宝 NPM 镜像<br><a href="http://note.youdao.com/" target="_blank" rel="external">http://npm.taobao.org/</a><br>镜像使用方法（三种办法任意一种都能解决问题，建议使用第三种，将配置写死，下次用的时候配置还在）:  </p>
<p><strong>1.通过config命令</strong><br>npm config set registry <a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a><br>npm info underscore<br>（如果上面配置正确这个命令会有字符串response）  </p>
<p><strong>2.命令行指定</strong><br>npm –registry <a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a> info underscore   </p>
<p><strong>3.编辑 ~/.npmrc 加入下面内容</strong><br>registry = <a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a>  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;win10安装报错,提示需要管理员账户.&lt;br&gt;后来修改权限半天,而且也切换管理员账户还是出错.误解搜索错误解决办法,最后替换淘宝的源解决问题.&lt;br&gt;报错:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm install hexo-cli -g
npm WARN optiona
    
    </summary>
    
      <category term="hexo" scheme="http://linjin101.com/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>git无法pull仓库</title>
    <link href="http://linjin101.com/2017/03/06/git%E6%97%A0%E6%B3%95pull%E4%BB%93%E5%BA%93refusing%20to%20merge%20unrelated%20histories/"/>
    <id>http://linjin101.com/2017/03/06/git无法pull仓库refusing to merge unrelated histories/</id>
    <published>2017-03-06T15:46:55.000Z</published>
    <updated>2017-03-07T12:46:29.024Z</updated>
    
    <content type="html"><![CDATA[<p>git无法pull仓库refusing to merge unrelated histories</p>
<p><a href="http://note.youdao.com/" target="_blank" rel="external">http://blog.csdn.net/lindexi_gd/article/details/52554159</a></p>
<p>本文讲的是把Git在最新2.9.2，合并pull两个不同的项目，出现的问题如何去解决fatal: refusing to merge unrelated histories</p>
<p>我在Github新建一个仓库，写了License，然后把本地一个写了很久仓库上传。</p>
<p>先pull，因为两个仓库不同，发现refusing to merge unrelated histories，无法pull</p>
<p>因为他们是两个不同的项目，要把两个不同的项目合并，git需要添加一句代码，在git pull，这句代码是在git 2.9.2版本发生的，最新的版本需要添加–allow-unrelated-histories</p>
<p>假如我们的源是origin，分支是master，那么我们 需要这样写<br><code>git pull origin master --allow-unrelated-histories</code><br>需要知道，我们的源可以是本地的路径</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;git无法pull仓库refusing to merge unrelated histories&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://note.youdao.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn
    
    </summary>
    
      <category term="git" scheme="http://linjin101.com/categories/git/"/>
    
    
      <category term="git无法pull" scheme="http://linjin101.com/tags/git%E6%97%A0%E6%B3%95pull/"/>
    
  </entry>
  
  <entry>
    <title>github配置折腾步骤</title>
    <link href="http://linjin101.com/2017/03/06/github%E9%85%8D%E7%BD%AE%E6%8A%98%E8%85%BE%E6%AD%A5%E9%AA%A4/"/>
    <id>http://linjin101.com/2017/03/06/github配置折腾步骤/</id>
    <published>2017-03-06T15:46:55.000Z</published>
    <updated>2017-03-07T12:46:29.024Z</updated>
    
    <content type="html"><![CDATA[<p>win10安装报错,提示需要管理员账户.<br>后来修改权限半天,而且也切换管理员账户还是出错.误解搜索错误解决办法,最后替换淘宝的源解决问题.<br>报错:</p>
<pre><code>$ npm install hexo-cli -g
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules\hexo-cli\node_modules\chokidar\node_modules\fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.1: wanted {&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;} (current: {&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;})
npm ERR! Windows_NT 10.0.14393
npm ERR! argv &quot;D:\\nodejs\\node.exe&quot; &quot;D:\\nodejs\\node_modules\\npm\\bin\\npm-cli.js&quot; &quot;install&quot; &quot;hexo-cli&quot; &quot;-g&quot;
npm ERR! node v6.10.0
npm ERR! npm  v3.10.10
npm ERR! path C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli
npm ERR! code EPERM
npm ERR! errno -4048
npm ERR! syscall rename

npm ERR! Error: EPERM: operation not permitted, rename &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli&apos; -&gt; &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\.hexo-cli.DELETE&apos;
npm ERR!     at moveAway (D:\nodejs\node_modules\npm\lib\install\action\finalize.js:38:5)
npm ERR!     at destStatted (D:\nodejs\node_modules\npm\lib\install\action\finalize.js:27:7)
npm ERR!     at D:\nodejs\node_modules\npm\node_modules\graceful-fs\polyfills.js:267:18
npm ERR!     at FSReqWrap.oncomplete (fs.js:123:15)
npm ERR!
npm ERR! Error: EPERM: operation not permitted, rename &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli&apos; -&gt; &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\.hexo-cli.DELETE&apos;
npm ERR!     at Error (native)
npm ERR!  Error: EPERM: operation not permitted, rename &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli&apos; -&gt; &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\.hexo-cli.DELETE&apos;
npm ERR!     at moveAway (D:\nodejs\node_modules\npm\lib\install\action\finalize.js:38:5)
npm ERR!     at destStatted (D:\nodejs\node_modules\npm\lib\install\action\finalize.js:27:7)
npm ERR!     at D:\nodejs\node_modules\npm\node_modules\graceful-fs\polyfills.js:267:18
npm ERR!     at FSReqWrap.oncomplete (fs.js:123:15)
npm ERR!
npm ERR! Error: EPERM: operation not permitted, rename &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli&apos; -&gt; &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\.hexo-cli.DELETE&apos;
npm ERR!     at Error (native)
npm ERR!
npm ERR! Please try running this command again as root/Administrator.

npm ERR! Please include the following file with any support request:
npm ERR!     E:\git\hexo\npm-debug.log
</code></pre><p>后来执行下面语句安装成功hexo<br><code>npm install -g hexo --registry=https://registry.npm.taobao.org</code></p>
<p>淘宝 NPM 镜像<br><a href="http://note.youdao.com/" target="_blank" rel="external">http://npm.taobao.org/</a><br>镜像使用方法（三种办法任意一种都能解决问题，建议使用第三种，将配置写死，下次用的时候配置还在）:  </p>
<p><strong>1.通过config命令</strong><br>npm config set registry <a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a><br>npm info underscore<br>（如果上面配置正确这个命令会有字符串response）  </p>
<p><strong>2.命令行指定</strong><br>npm –registry <a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a> info underscore   </p>
<p><strong>3.编辑 ~/.npmrc 加入下面内容</strong><br>registry = <a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a>  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;win10安装报错,提示需要管理员账户.&lt;br&gt;后来修改权限半天,而且也切换管理员账户还是出错.误解搜索错误解决办法,最后替换淘宝的源解决问题.&lt;br&gt;报错:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm install hexo-cli -g
npm WARN optiona
    
    </summary>
    
      <category term="hexo" scheme="http://linjin101.com/categories/hexo/"/>
    
    
      <category term="github报错" scheme="http://linjin101.com/tags/github%E6%8A%A5%E9%94%99/"/>
    
  </entry>
  
</feed>
