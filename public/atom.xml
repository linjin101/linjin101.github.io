<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>程序猿非猿的博客</title>
  <subtitle>珠宝盈屋防人偷,夜不能寐日日愁,何如满腹书卷在,福慧双修路路酬</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://linjin101.com/"/>
  <updated>2017-03-21T13:17:47.703Z</updated>
  <id>http://linjin101.com/</id>
  
  <author>
    <name>linjin101</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Elon Musk的第一性原理思考方式</title>
    <link href="http://linjin101.com/2017/03/21/Elon-Musk%E7%9A%84%E7%AC%AC%E4%B8%80%E6%80%A7%E5%8E%9F%E7%90%86%E6%80%9D%E8%80%83%E6%96%B9%E5%BC%8F/"/>
    <id>http://linjin101.com/2017/03/21/Elon-Musk的第一性原理思考方式/</id>
    <published>2017-03-21T12:43:00.000Z</published>
    <updated>2017-03-21T13:17:47.703Z</updated>
    
    <content type="html"><![CDATA[<p>这里有必要先介绍ElonMusk:<br>Elon Musk出生于南非，18岁时移民美国，天才生意人，做过Paypal，环保跑车公司Tesla，空间探索技术公司的首席执行官兼首席技术官，特斯拉汽车的产品设计师。新公司是SpaceX，是一家私人火箭公司，正在用无可匹敌的低廉价格发射太空飞船。他的人生目标是将人类送达火星，并在火星上创办企业。</p>
<p><img src="/images/v2-ff583ccb9430a404fe47dd430b7b3a16_b.jpg" alt="image"></p>
<p>就是这样一位天才生意人提出了他在产品设计的一种思维方式，叫<strong><strong>“第一性原理”</strong></strong>：打破一切知识的藩篱，回归到事物本源去思考基础性的问题，在不参照经验或其它的情况下，从物质/世界的最本源出发思考事物/系统。这与他的物理学出身和工程师思维密不可分。</p>
<p>　　“我相信有一种很好的思考架构，就是第一性原理，我们能够真正地去思考一些基础的真理，并且从中去论证，而不是类推。我们绝大多数时候都是类推地思考问题，也就是模仿别人做的事情并加以微幅更改。但当你想要做一些新的东西时，必须要运用第一性原理来思考。”Elon Musk（以下用马斯克代替）解释说。</p>
<p>第一性原理是一个计算物理专业名词，广义的第一性原理计算指的是一切基于量子力学原理的计算。第一性原理就是从头计算，不需要任何参数，只需要一些基本的物理常量，就可以得到体系基态的基本性质的原理。</p>
<p>马斯克幼年时代的偶像几乎都是伟大的科学家和工程师，比如尼古拉·特斯拉、爱迪生、爱因斯坦、牛顿、莎士比亚。特斯拉汽车就是为了向尼古拉·特斯拉致敬。</p>
<p>　　当有媒体记者问他“觉得自己是工程师还是商人”时，他脱口而出：“我是一名工程师，我把大部分时间都花在制造和设计上。”是的，和大多数创业者不同，马斯克似乎一直在追求技术上的成就和突破，他有很大部分的成就感来自于技术问题的解决，而不完全是挣了多少钱。</p>
<p>　　当马斯克坐拥大笔资金，决定进军太空时，他的工程师精神开始得到淋漓尽致的发挥。尽管进军太空的念头起源有些偶然，一开始看上去只是硅谷新贵们“烧钱”的游戏，但马斯克却非常当真。为了造火箭，马斯克研读了名为《火箭推进基本原理》的书。他虽然学的是物理，但并不是火箭专家。为了造火箭，他读遍了相关的大学教材。</p>
<p>　　事实上，正是第一性原则的思维方式帮助马斯克解决了很多技术上的难题。电池是电动车最关键的部分，也是一直阻碍电动车产业化的关键技术。马斯克在思考电池问题时，将电池组分解成最基础的材料组成部分：碳、镍、铝、其他用于分离的聚合物还有一个盒子，这些都是电池组重要的组成元素，这是形成一块电池的最基本的事实。从那里，每个部分都可以优化、改进。这样，他造出了每千瓦小时80美元的廉价电池。</p>
<p>　　SpaceX也一样。SpaceX发射火箭采用的实际上是成熟的技术和设备，创新之处在于生产流程成本最小化的改进。马斯克希望把商业发射市场的火箭发射费降低九成，而成本是核心的核心。美国航空航天专家霍华德表示：“马斯克的秘密不在技术，而在预算控制。”</p>
<p>　　“第一性原理”的思维方式贯穿于马斯克的整个经营思路，“直销”也是其中的一个体现。如何让用户获得更实惠的价格和更好的用车体验？传统的方式是选择更好的经销商合作，而特斯拉选择让用户直接从制造商手中买车，减少中间代理环节，亲自掌控销售渠道，把价格压到最低。</p>
<p>当然，“第一性原理”思维并非马斯克独有，能够走在科技最前沿，进行颠覆性创新的企业家，多少都具备这样的思维模式，例如苹果原CEO乔布斯。还记得苹果公司说要做手机的时候，那个时候手机市场已经很成熟了，诺基亚也是那时候的一代霸主，但乔布斯看准了未来的趋势：按键太占空间，将被多触点控屏代替即触摸屏，键盘都可以软件代替。那个时候黑莓手机很流行，几位团队成员主张配备键盘，但乔布斯否决了这种想法。物理键盘会占用屏幕空间，而且不如触摸屏键盘灵活、适应性强。“如果我们能用软件把键盘功能实现在屏幕上，那你想想，我们能在这个基础上作多少创新，这是一场革命。”乔布斯说。最后，产品出来，如果你想拨号，屏幕会显示数字键盘：想写东西，调出打字键盘。每种特定的活动都对应的按钮可以满足需求，但当用户观赏视频时，这些键盘都会消失，软件取代硬件，使得界面流畅灵活。Iphone的诞生，改变了手机世界的格局，更重要的是改变了人类世界的生活方式。</p>
<p>在移动互联网大浪潮的今天，每个企业都活的很小心，因为一不小心，你的东西也许就被人颠覆了，又或许你创作出的产品对整个行业进行了颠覆，这个时代变化之快，令我们叹为观止。这是一个充满奇迹的时代。</p>
<p>当下的中国，太多的创业者在用类似的方法做同样的产品，如果其中有人能够跳出既有模式的思维模式，用“第一性原理”来思考行业和产品，或许有无限的未来。<br><img src="/images/v2-cb203a31330e0ef28bfc584318e2ed70_b.jpg" alt="image"></p>
<p>以下是ElonMusk在接受采访是的原话：“Well, I do think there’s a good framework forthinking. It‘s physics. You know, the sort of first principlesreasoning.Generally I think there are – what I mean by that is, boil thingsdown to their fundamental truths and reason up from there, as opposed to reasoning by analogy. Physics is really figuring out how todiscover new things that are counterintuitive, like quantum mechanics.”</p>
<hr>
<p> 第一性原理强调用少量的基本数据进行分析，简化。强调事实和少量假设，从问题的最本质出发，进行推理思考，而不是类比思考。不被过去的经验知识所干扰。</p>
<p>关闭大脑，用直觉去感受，抓住事物的本质。</p>
<p>第一性原理的思维方式强调独立思考，而不是人云亦云。强调质疑，不轻易接受否定的答案。</p>
<hr>
<p>“第一原理”由 2300 年前古希腊哲学家亚里士多德提出。他认为，在每一系统的探索中，存在第一原理，是一个最基本的命题或假设，不能被省略或删除，也不能被违反。亚里斯多德认为，第一原理有着至高无上的地位。他甚至表示“第一原理”充满“神性”。此处“神”已非一个特殊的族类，而是渗透于万物自然之中的一种“性质”—亚里士多德将此种性质看作是最高贵的。</p>
<p>第一性原理还是一个量子力学的术语，意思是从头算起，无需任何经验参数，只用少量基本数据，做量子计算，得出分子机构和物理的性质。这与我们日常生活中惯用的类比推理方式迥异。类比也是一种重要的逻辑思维和推理法，指运用已经有的知识和经验将陌生的，不熟悉的的问题与平时熟悉的问题进行类比，尝试找到解决的方法。</p>
<p>在创业之前，马斯克曾申请了斯坦福大学的应用物理学博士学位，有望成为一名物理学家。但没过几天他就放弃了。然而，物理学给他最大的影响则是“第一性原理思考模式”：一种不断追问事情本质思考模式。正如他说：“我觉得问题关键在于第一性原理而不是类比；生活中，我们推理的一般方法是类比；应用类比的方法，人们之所以做某些事情，是因为，人们曾经做过这些事情，或者其他人做过；但第一性原理思维下，人们会首先刨根问底最基础的事实真相，然后基于这些事实在进行推理论证。”</p>
<pre><code>&apos;The normal way we conduct our lives is we reason by analogy,&apos; Elon Musk said.
&apos;[With analogy] we are doing this because it&apos;s like something else thatwas done, 
or it is like what other people are doing. [With first principles]you boil things 
down to the most fundamental truths … and then reason up fromthere.&apos;
(Musk)
</code></pre><p>“第一性原理”:   </p>
<pre><code>思维是一个典型的物理思维，一切是基于事实的、本源的，而非由于演化或竞争产生的市场的、现时的。这对于创新至关重要。在开发火箭项目SpaceX之初，马斯克团队碰到的最大问题就是如何降低火箭的成本。他们并没有仿照市场上常规的成本结构，而是对火箭从根源上进行了重新分析，哪些部件是火箭所必须的，这些部件重新整合后降到了市场价格的2%。惊人乎？

同样的事情还发生在此后的特斯拉汽车。大家都知道，电池是新能源汽车的最主要部件之间，它的成本也是整个汽车最大的成本部分。当时，电池的成本大概是 600 美元／千瓦时。既然这么贵，很多企业在创新时，一般会把这当成一个既定要素，而往往不会去改变它。但按照马斯克的第一原理思维，他们会问：电池组到底是由什么材料组成的？这些电池原料的市场价格是多少？电池的组成包括碳、镍、铝和一些聚合物。如果我们从伦敦金属交易所购买这些原材料然后组合成电视，需要多少钱？他们做到了，将电池的成本降到了只要 80 美元／千瓦时。

竞争容易使人迷失方向，而错失发现事物本质的机会。学习、工作也是一样，急迫、功利将只能获得皮毛。祝贺今年成功的高考学生，因为他们的深入学习过程，才刚刚开始。那些误入歧途的、已步入社会太久的我们，无论从事什么行业，干什么事情，多思考一些本源或本质的东西还是很有必要的。
</code></pre><p>知乎:<a href="https://zhuanlan.zhihu.com/p/25625003" target="_blank" rel="external">特斯拉创始人伊隆·马斯克的思维方式：第一性原理</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有必要先介绍ElonMusk:&lt;br&gt;Elon Musk出生于南非，18岁时移民美国，天才生意人，做过Paypal，环保跑车公司Tesla，空间探索技术公司的首席执行官兼首席技术官，特斯拉汽车的产品设计师。新公司是SpaceX，是一家私人火箭公司，正在用无可匹敌的低廉价
    
    </summary>
    
      <category term="互联网" scheme="http://linjin101.com/categories/%E4%BA%92%E8%81%94%E7%BD%91/"/>
    
    
      <category term="第一性原理" scheme="http://linjin101.com/tags/%E7%AC%AC%E4%B8%80%E6%80%A7%E5%8E%9F%E7%90%86/"/>
    
      <category term="Elon Musk" scheme="http://linjin101.com/tags/Elon-Musk/"/>
    
  </entry>
  
  <entry>
    <title>一些镜像</title>
    <link href="http://linjin101.com/2017/03/14/%E4%B8%80%E4%BA%9B%E9%95%9C%E5%83%8F/"/>
    <id>http://linjin101.com/2017/03/14/一些镜像/</id>
    <published>2017-03-14T06:08:00.000Z</published>
    <updated>2017-03-18T03:12:44.914Z</updated>
    
    <content type="html"><![CDATA[<p>一些镜像  密码：Github</p>
<h4 id="Google"><a href="#Google" class="headerlink" title="Google"></a>Google</h4><p>网页搜索 <a href="https://g.zmirrordemo.com" target="_blank" rel="external">https://g.zmirrordemo.com</a><br>Scholar <a href="https://g.zmirrordemo.com/scholar" target="_blank" rel="external">https://g.zmirrordemo.com/scholar</a><br>Image <a href="https://g.zmirrordemo.com/imghp" target="_blank" rel="external">https://g.zmirrordemo.com/imghp</a><br>Gmail <a href="https://g.zmirrordemo.com/gmail" target="_blank" rel="external">https://g.zmirrordemo.com/gmail</a> (基本HTML)  </p>
<h4 id="中文维基"><a href="#中文维基" class="headerlink" title="中文维基"></a>中文维基</h4><p><a href="https://g.zmirrordemo.com/wiki" target="_blank" rel="external">https://g.zmirrordemo.com/wiki</a>  </p>
<h4 id="Twitter"><a href="#Twitter" class="headerlink" title="Twitter"></a>Twitter</h4><p>PC <a href="https://t-pc.zmirrordemo.com" target="_blank" rel="external">https://t-pc.zmirrordemo.com</a><br>Mobile <a href="https://t-mobile.zmirrordemo.com" target="_blank" rel="external">https://t-mobile.zmirrordemo.com</a>  </p>
<h4 id="Instagram"><a href="#Instagram" class="headerlink" title="Instagram"></a>Instagram</h4><p>PC &amp; Mobile <a href="https://in.zmirrordemo.com" target="_blank" rel="external">https://in.zmirrordemo.com</a></p>
<h4 id="Facebook"><a href="#Facebook" class="headerlink" title="Facebook"></a>Facebook</h4><p>PC <a href="https://fb.zmirrordemo.com" target="_blank" rel="external">https://fb.zmirrordemo.com</a><br>绝大部分功能可用, 但是不完整</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一些镜像  密码：Github&lt;/p&gt;
&lt;h4 id=&quot;Google&quot;&gt;&lt;a href=&quot;#Google&quot; class=&quot;headerlink&quot; title=&quot;Google&quot;&gt;&lt;/a&gt;Google&lt;/h4&gt;&lt;p&gt;网页搜索 &lt;a href=&quot;https://g.zmirror
    
    </summary>
    
      <category term="镜像" scheme="http://linjin101.com/categories/%E9%95%9C%E5%83%8F/"/>
    
    
      <category term="google" scheme="http://linjin101.com/tags/google/"/>
    
      <category term="镜像" scheme="http://linjin101.com/tags/%E9%95%9C%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>Gitlab的使用</title>
    <link href="http://linjin101.com/2017/03/14/Gitlab%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://linjin101.com/2017/03/14/Gitlab的使用/</id>
    <published>2017-03-14T05:34:00.000Z</published>
    <updated>2017-03-21T13:08:48.129Z</updated>
    
    <content type="html"><![CDATA[<p>最近成功的在公司部署了gitlab，鉴于同学们还不会使用，这里写篇博客说明下。如果想安装gitlab的话，需要一些linux的基础知识</p>
<h4 id="1-什么是Git"><a href="#1-什么是Git" class="headerlink" title="1.什么是Git"></a>1.什么是Git</h4><p>鉴于有同学还没用过git，就先介绍一下git吧。git就是一种版本控制工具。说到版本控制，大家可能就想到了svn。但是两者有着本质的区别。</p>
<p>svn是集中化的版本控制系统, 只有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同工作的人们都通过客户端连到这台服务器，取出最新的文件或者提交更新。</p>
<p>git是分布式的版本控制系统, 每一个终端都是一个仓库，客户端并不只提取最新版本的文件快照，而是把原始的代码仓库完整地镜像下来。每一次的提取操作，实际上都是一次对代码仓库的完整备份。</p>
<h5 id="集中式版本控制："><a href="#集中式版本控制：" class="headerlink" title="集中式版本控制："></a>集中式版本控制：</h5><p><img src="/images/pasted-2.png" alt="upload successful"></p>
<h5 id="分布式版本控制："><a href="#分布式版本控制：" class="headerlink" title="分布式版本控制："></a>分布式版本控制：</h5><p><img src="/images/pasted-1.png" alt="upload successful"> </p>
<h4 id="2-GitLab创建工程"><a href="#2-GitLab创建工程" class="headerlink" title="2.GitLab创建工程"></a>2.GitLab创建工程</h4><p>点击导航条上的 “+” 就可以进入创建工程页面<br><img src="/images/pasted-3.png" alt="upload successful"><br>这里面很简单,主要讲两个地方：</p>
<h5 id="2-1-namespace"><a href="#2-1-namespace" class="headerlink" title="2.1 namespace"></a>2.1 namespace</h5><p>这个选择是用来决定这个工程所属的，可以选User为你自己。<br>或者选择组，这个会影响到后面工程的url。<br>例如我选择了组suning创建工程SuningTest、<br>那么这个工程就会在这个组内可见，<br>那么访问路径就是<a href="https://domain.com/suning/suningtest" target="_blank" rel="external">link</a>  </p>
<h5 id="2-2-Visibility-Level"><a href="#2-2-Visibility-Level" class="headerlink" title="2.2 Visibility Level"></a>2.2 Visibility Level</h5><p>权限等级分三种：   </p>
<pre><code>Private 私有的，只有你自己或者组内的成员能访问
Internal 所有登录的用户
Public 公开的，所有人都可以访问
</code></pre><h4 id="3-Git的使用"><a href="#3-Git的使用" class="headerlink" title="3.Git的使用"></a>3.Git的使用</h4><h5 id="3-1-添加sshkey"><a href="#3-1-添加sshkey" class="headerlink" title="3.1 添加sshkey"></a>3.1 添加sshkey</h5><p>git仓库之间的代码传输协议主要使用ssh协议。而一般搭建gitlab的时候使用的git用户是没有密码的，因此直接ssh是不能登录的，就需要使用ssh-keygen上传公钥，使用非对称加密传输。下面讲述如何上传你的ssh公钥：</p>
<h5 id="3-1-1生成sshkey"><a href="#3-1-1生成sshkey" class="headerlink" title="3.1.1生成sshkey"></a>3.1.1生成sshkey</h5><p>在终端中敲下面的命令，第一步会生成一对私钥和公钥，分别存在 <code>~/.ssh/id_rsa</code>和<code>~/.ssh/id_rsa.pub</code>中。第二步查看公钥字符串。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;$your_email&quot;</div><div class="line">cat ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure>
<h5 id="3-1-2保存sshkey到gitlab"><a href="#3-1-2保存sshkey到gitlab" class="headerlink" title="3.1.2保存sshkey到gitlab"></a>3.1.2保存sshkey到gitlab</h5><p>在面板上依次点击<code>Profile Settings –&gt; SSH Keys –&gt; Add SSH Keys</code>。然后把上一步中的<code>id_rsa.pub</code>中的内容拷贝出来粘贴到输入框中，保存。<br><img src="/images/pasted-4.png" alt="upload successful"><br>完成上面两步之后就成功的添加了sshkey了，然后就可以上传代码了。</p>
<h5 id="3-2-初始上传代码"><a href="#3-2-初始上传代码" class="headerlink" title="3.2 初始上传代码"></a>3.2 初始上传代码</h5><p>如果你已经使用过git了，那么这一步对你来说可以跳过了。整体来说比较简单的。下面的$project_root代表工程根目录</p>
<pre><code>进入工程目录 cd $project_root`
初始化git仓库 git init
添加文件到仓库 git add .
提交代码到仓库 git commit -m &apos;init commit&apos;
链接到git server git remote add origin git@example.com:namespace/projectname.git
push代码到服务器 git push origin master
</code></pre><h5 id="3-3-克隆代码到本地"><a href="#3-3-克隆代码到本地" class="headerlink" title="3.3 克隆代码到本地"></a>3.3 克隆代码到本地</h5><p>在svn中，我们都叫checkout. 把代码checkout到本地。而git中我们叫克隆，克隆会把整个仓库都拉到本地。<br>如，我要把刚才的工程再clone到本地。<br><code>git clone git@example.com:namespace/projectname.git</code></p>
<h5 id="3-4-设置gitignore"><a href="#3-4-设置gitignore" class="headerlink" title="3.4 设置gitignore"></a>3.4 设置gitignore</h5><p>有一些文件或文件夹是我们不想要被版本控制的，比如<code>.DS_Store build\ xcuserdata thumbs.db</code>，git提供了一种忽略的方案。</p>
<p>在项目根目录下创建<code>.gitignore</code>文件，然后把需要忽略的文件或文件夹名写进去。这样就可以忽略这些文件受版本控制啦。</p>
<p>svn也提供了这样忽略的方案，svn也可以设置全局忽略。svn的此配置放在<code>~/.subversion/config</code>中<code>global-ignores</code>的值。</p>
<p>通过设置<code>ignore</code>，我们可以实现git和svn双管理哦，就是在svn忽略.git文件夹，在<code>gitignore中</code>忽略<code>.svn</code>文件夹，有兴趣的同学可以试试</p>
<h5 id="3-5-Git文件的状态"><a href="#3-5-Git文件的状态" class="headerlink" title="3.5 Git文件的状态"></a>3.5 Git文件的状态</h5><p>Git管理下的文件有3种状态，如下图：<br><img src="/images/pasted-5.png" alt="upload successful"></p>
<h5 id="3-6-Git基础"><a href="#3-6-Git基础" class="headerlink" title="3.6 Git基础"></a>3.6 Git基础</h5><p>Git博大精深，个人感觉，不管是从其强大的功能上，还是从其实现方案上来讲比svn强大很多。这里贴个学习链接吧，这一系列讲的非常全面非常详细：<br><a href="https://git-scm.com/book/zh/v2" target="_blank" rel="external">Git基础</a></p>
<h5 id="3-7-图形化Git管理工具"><a href="#3-7-图形化Git管理工具" class="headerlink" title="3.7 图形化Git管理工具"></a>3.7 图形化Git管理工具</h5><p>如果说你不喜欢命令行的使用方式，你也可以使用图形界面工具SoureTree: <a href="http://www.sourcetreeapp.com/" target="_blank" rel="external">http://www.sourcetreeapp.com/</a> 界面简洁，使用方便,功能强大。</p>
<p>贴个预览：<br><img src="/images/pasted-6.png" alt="upload successful"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近成功的在公司部署了gitlab，鉴于同学们还不会使用，这里写篇博客说明下。如果想安装gitlab的话，需要一些linux的基础知识&lt;/p&gt;
&lt;h4 id=&quot;1-什么是Git&quot;&gt;&lt;a href=&quot;#1-什么是Git&quot; class=&quot;headerlink&quot; title=&quot;1
    
    </summary>
    
      <category term="git" scheme="http://linjin101.com/categories/git/"/>
    
    
      <category term="git" scheme="http://linjin101.com/tags/git/"/>
    
      <category term="gitlab" scheme="http://linjin101.com/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>hexo-admin安装以及问题解决</title>
    <link href="http://linjin101.com/2017/03/13/hexo-admin%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>http://linjin101.com/2017/03/13/hexo-admin安装以及问题解决/</id>
    <published>2017-03-12T16:09:00.000Z</published>
    <updated>2017-03-14T13:57:10.543Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-安装hexo和创建一个博客"><a href="#1-安装hexo和创建一个博客" class="headerlink" title="1.安装hexo和创建一个博客"></a>1.安装hexo和创建一个博客</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo</div><div class="line">cd ~/</div><div class="line">hexo init my-blog</div><div class="line">cd my-blog</div><div class="line">npm install</div></pre></td></tr></table></figure>
<h4 id="2-安装hexo-admin和本地运行"><a href="#2-安装hexo-admin和本地运行" class="headerlink" title="2.安装hexo-admin和本地运行"></a>2.安装hexo-admin和本地运行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm install --save hexo-admin</div><div class="line">hexo server -d</div><div class="line">open http://localhost:4000/admin/</div></pre></td></tr></table></figure>
<p><strong><font color="red">(hexo-admin管理只能在本地用,github上面只有静态页面不能进行管理,切记!!!)</font></strong>  </p>
<h4 id="3-密码保护"><a href="#3-密码保护" class="headerlink" title="3.密码保护"></a>3.密码保护</h4><p>如果你的hexo-admin需要一些保护密码，你只需要添加一些你的hexo配置变量到配置文件_config.yml：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">admin:</div><div class="line">  username: myfavoritename</div><div class="line">  password_hash: be121740bf988b2225a313fa1f107ca1</div><div class="line">  secret: a secret something</div></pre></td></tr></table></figure></p>
<h4 id="4-安装问题处理"><a href="#4-安装问题处理" class="headerlink" title="4.安装问题处理"></a>4.安装问题处理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ npm install --save hexo-admin</div><div class="line">npm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue</div><div class="line">hexo-site@0.0.0 E:\git\linjin101.github.io</div><div class="line"></div><div class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules\chokidar\node_modules\fsevents):</div><div class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.1: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)</div></pre></td></tr></table></figure>
<h4 id="5-解决"><a href="#5-解决" class="headerlink" title="5.解决"></a>5.解决</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install minimatch@&quot;3.0.2&quot;  </div><div class="line">npm update -d</div></pre></td></tr></table></figure>
<p>如果还有问题:<br>升级后依旧报错,只好重装:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm update minimatch</div><div class="line">npm -v minimatch</div><div class="line">npm install -g npm@3</div></pre></td></tr></table></figure>
<p>清理,生成,本地启动</p>
<pre><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s
</code></pre><p>浏览器打开<br><a href="http://localhost:4000/admin/" target="_blank" rel="external">http://localhost:4000/admin/</a></p>
<p><img src="/images/20170313091240.png" alt="image"></p>
<h4 id="6-NPM介绍"><a href="#6-NPM介绍" class="headerlink" title="6.NPM介绍:"></a>6.NPM介绍:</h4><p>是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：<br>允许用户从NPM服务器下载别人编写的第三方包到本地使用。<br>允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。<br>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。   </p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-安装hexo和创建一个博客&quot;&gt;&lt;a href=&quot;#1-安装hexo和创建一个博客&quot; class=&quot;headerlink&quot; title=&quot;1.安装hexo和创建一个博客&quot;&gt;&lt;/a&gt;1.安装hexo和创建一个博客&lt;/h4&gt;&lt;figure class=&quot;highli
    
    </summary>
    
      <category term="hexo" scheme="http://linjin101.com/categories/hexo/"/>
    
    
      <category term="hexo-admin" scheme="http://linjin101.com/tags/hexo-admin/"/>
    
      <category term="github" scheme="http://linjin101.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>github下载问题处理</title>
    <link href="http://linjin101.com/2017/03/08/github%E4%B8%8B%E8%BD%BD%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/"/>
    <id>http://linjin101.com/2017/03/08/github下载问题处理/</id>
    <published>2017-03-08T07:48:46.000Z</published>
    <updated>2017-03-14T13:57:10.542Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://jingyan.baidu.com/article/f79b7cb367e72e9145023e40.html?st=2&amp;os=0&amp;bd_page_type=1&amp;net_type=1" target="_blank" rel="external">http://jingyan.baidu.com/article/f79b7cb367e72e9145023e40.html?st=2&amp;os=0&amp;bd_page_type=1&amp;net_type=1</a></p>
<p>国内同步github库,通过国内库拉取文件超快</p>
<p><a href="https://coding.net/u/linjin101/p/hexo-theme-yelee/git" target="_blank" rel="external">https://coding.net/u/linjin101/p/hexo-theme-yelee/git</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://jingyan.baidu.com/article/f79b7cb367e72e9145023e40.html?st=2&amp;amp;os=0&amp;amp;bd_page_type=1&amp;amp;net_type=1&quot; target=&quot;_blank&quot; 
    
    </summary>
    
      <category term="github" scheme="http://linjin101.com/categories/github/"/>
    
    
      <category term="github下载慢" scheme="http://linjin101.com/tags/github%E4%B8%8B%E8%BD%BD%E6%85%A2/"/>
    
  </entry>
  
  <entry>
    <title>产品设计体会功能列表：Feature List</title>
    <link href="http://linjin101.com/2017/03/08/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1%E4%BD%93%E4%BC%9A%EF%BC%881009%EF%BC%89%E5%8A%9F%E8%83%BD%E5%88%97%E8%A1%A8%EF%BC%9AFeature-List/"/>
    <id>http://linjin101.com/2017/03/08/产品设计体会（1009）功能列表：Feature-List/</id>
    <published>2017-03-08T05:54:41.000Z</published>
    <updated>2017-03-14T13:57:10.545Z</updated>
    
    <content type="html"><![CDATA[<p>只要需求采集的功夫做足了，你就会发现需求超多，必须每隔一段时间整理一次，通常我们叫它功能列表：Feature List,说一下自己感觉这个玩意应该怎么做，其中吸取了叶老大原来的表格还有网上一些相关文章的内容。这个表是用Excel做的，一些简单的技巧，比如条件格式、筛选、单元格有效性、单元格锁定、隐藏是必须的基本功，另外我比较喜欢把表格弄好看点，这样整天对着就不会闷死嘞，如图。</p>
<p><img src="http://img1.51cto.com/attachment/200903/200903091236565232140.jpg" alt="image"></p>
<p>看不清吧？那就对了，不好意思有些信息不能公开。<br>表格中每一行是一个功能，而每列都是这个功能的某个属性： </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">graph LR</div><div class="line">模块--&gt;功能</div><div class="line">功能--&gt;商业价值</div><div class="line">商业价值--&gt;开发量</div><div class="line">开发量--&gt;性价比</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>模块</th>
<th>子模块</th>
<th>功能</th>
<th>功能描述</th>
<th>商业价值描述</th>
<th>商业属性</th>
<th>商业优先级</th>
<th>开发量</th>
<th>性价比</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>XXX</td>
<td>XXX</td>
<td>XXX</td>
<td>XXX</td>
<td>XXX</td>
<td>XXX</td>
<td>XXX</td>
<td>XXX</td>
<td>XXX</td>
<td>XXX    </td>
</tr>
</tbody>
</table>
<p><strong>模块</strong>：一般来说，每个模块下分3~10个子模块是合理的，否则要考虑重新划分（由于这个癖好，自己电脑里的文件目录结构也是遵循这个原则的）。</p>
<p><strong>子模块</strong>：稍大一点的产品至少要给功能模块做二级分类了（更大的产品视需要可能有更多级的模块分类），这部分其实又涉及另外一个很大的领域IA（信息构架，会影响将来产品的站点树形结构，页面组织，菜单层级等），后面也会整理一些相关内容。</p>
<p><strong>功能</strong>：具体的说一点，要给用户提供什么功能，给这个功能起个名字。</p>
<p><strong>功能描描述</strong>述：这里可以说具体一点。</p>
<p><strong>商业价值描述</strong>：通俗点，卖点是什么，可以给用户提供什么价值。</p>
<p><strong>商业属性</strong>：简单分为基本，扩展，增值。举个手机的例子，打电话短信是基本功能，给电话录音是扩展功能（和基本功能相关），而如果这个电话特别结实，可以当锤子钉钉子，那就是增值功能了。这里的区分其实没那么绝对，取决于很多因素，比如商业目的。</p>
<p><strong>商业优先级</strong>：这块是整个Feature List工作中核心的部分，判断的准确直接影响着将来产品的方向，我们的做法是先基于自己对商业目标的理解，主观定一个级别，所以之前的功课很重要，然后再PD团队pk，如有必要，再去客户处确认。</p>
<p>（iamsujie补：有时候细分为功能的紧急程度、重要程度、生命周期等细分因素。）</p>
<p><strong>开发</strong>量：一般由技术部门的项目经理或者系统分析师/架构师来确定。</p>
<p><strong>性价比</strong>：简单一点就是综合商业属性、优先级与开发量来确定，可以找出一个合适自己产品的计算方法。</p>
<p><strong>备注</strong>：这个不说了吧。</p>
<p>最后，对于这个表格，依照产品的大小、资源多少，可以灵活变通。</p>
<p>引用:<a href="http://iamsujie.com/1000/1009/" target="_blank" rel="external">http://iamsujie.com/1000/1009/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;只要需求采集的功夫做足了，你就会发现需求超多，必须每隔一段时间整理一次，通常我们叫它功能列表：Feature List,说一下自己感觉这个玩意应该怎么做，其中吸取了叶老大原来的表格还有网上一些相关文章的内容。这个表是用Excel做的，一些简单的技巧，比如条件格式、筛选、单元
    
    </summary>
    
      <category term="产品经理" scheme="http://linjin101.com/categories/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/"/>
    
    
      <category term="Feature List" scheme="http://linjin101.com/tags/Feature-List/"/>
    
      <category term="产品设计" scheme="http://linjin101.com/tags/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>github怎么绑定自己的域名</title>
    <link href="http://linjin101.com/2017/03/07/github%E6%80%8E%E4%B9%88%E7%BB%91%E5%AE%9A%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D%EF%BC%9F/"/>
    <id>http://linjin101.com/2017/03/07/github怎么绑定自己的域名？/</id>
    <published>2017-03-07T15:46:55.000Z</published>
    <updated>2017-03-14T13:57:10.542Z</updated>
    
    <content type="html"><![CDATA[<h1 id="github怎么绑定自己的域名？"><a href="#github怎么绑定自己的域名？" class="headerlink" title="github怎么绑定自己的域名？"></a>github怎么绑定自己的域名？</h1><p>1、在source文件夹中新建一个CNAME文件（无后缀名），<br>然后用文本编辑器打开，在首行添加你的网站域名，<br>如<a href="http://xxxx.com，注意前面没有http://，也没有www，然后使用hexo" target="_blank" rel="external">http://xxxx.com，注意前面没有http://，也没有www，然后使用hexo</a> g &amp;&amp; hexo d上传部署。<br>例如 CNAME:<br><code>xxx.com</code></p>
<p>2、在域名解析提供商，下面以dnspod为例。<br><strong>（1）先添加一个CNAME，主机记录写@，后面记录值写上你的<a href="http://xxxx.github.io" target="_blank" rel="external">http://xxxx.github.io</a></strong><br><strong>（2）再添加一个CNAME，主机记录写www，后面记录值也是<a href="http://xxxx.github.io这样别人用www和不用www都能访问你的网站（其实www的方式，会先解析成http://xxxx.github.io，然后根据CNAME再变成http://xxx.com，即中间是经过一次转换的）。" target="_blank" rel="external">http://xxxx.github.io这样别人用www和不用www都能访问你的网站（其实www的方式，会先解析成http://xxxx.github.io，然后根据CNAME再变成http://xxx.com，即中间是经过一次转换的）。</a></strong>  </p>
<blockquote>
<p>上面，我们用的是CNAME别名记录，也有人使用A记录，后面的记录值是写github page里面的ip地址，但有时候IP地址会更改，导致最后解析不正确，所以还是推荐用CNAME别名记录要好些，不建议用IP。  </p>
</blockquote>
<p><strong>3、等十分钟左右，刷新浏览器，用你自己域名访问下试试</strong>  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">http://www.jianshu.com/p/a39573555039</div><div class="line">http://www.jianshu.com/p/834d7cc0668d  </div><div class="line">https://segmentfault.com/q/1010000004557073/a-1020000004561322</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;github怎么绑定自己的域名？&quot;&gt;&lt;a href=&quot;#github怎么绑定自己的域名？&quot; class=&quot;headerlink&quot; title=&quot;github怎么绑定自己的域名？&quot;&gt;&lt;/a&gt;github怎么绑定自己的域名？&lt;/h1&gt;&lt;p&gt;1、在source文件夹中新
    
    </summary>
    
      <category term="github" scheme="http://linjin101.com/categories/github/"/>
    
    
      <category term="github绑定域名" scheme="http://linjin101.com/tags/github%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>hexo本地测试运行重启后页面空白,提示 : WARN No layout: index.html</title>
    <link href="http://linjin101.com/2017/03/07/hexo%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95%E8%BF%90%E8%A1%8C%E9%87%8D%E5%90%AF%E5%90%8E%E9%A1%B5%E9%9D%A2%E7%A9%BA%E7%99%BD-%E6%8F%90%E7%A4%BA-WARN-No-layout-index-html/"/>
    <id>http://linjin101.com/2017/03/07/hexo本地测试运行重启后页面空白-提示-WARN-No-layout-index-html/</id>
    <published>2017-03-07T04:44:35.000Z</published>
    <updated>2017-03-14T13:57:10.544Z</updated>
    
    <content type="html"><![CDATA[<p>运行git clone 指令获得主题后（假设是NEXT主题），在theme主题下保存文件夹的名称为：hexo-theme-next-0.4.0<br>那么如果在config里设置的是next，就会出现这样的WARN，<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a><br>显示的是空白。只要把theme下的文件夹名称改为next就显示正常了.要么就是获取的样式文件夹是空的,需要重新下载.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;运行git clone 指令获得主题后（假设是NEXT主题），在theme主题下保存文件夹的名称为：hexo-theme-next-0.4.0&lt;br&gt;那么如果在config里设置的是next，就会出现这样的WARN，&lt;a href=&quot;http://localhost:400
    
    </summary>
    
      <category term="hexo" scheme="http://linjin101.com/categories/hexo/"/>
    
    
      <category term="hexo空白" scheme="http://linjin101.com/tags/hexo%E7%A9%BA%E7%99%BD/"/>
    
      <category term="hexo本地测试" scheme="http://linjin101.com/tags/hexo%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>HTML4和HTML5的10个关键区别</title>
    <link href="http://linjin101.com/2017/03/07/HTML4%20%E5%92%8C%20HTML5%20%E7%9A%8410%E4%B8%AA%E5%85%B3%E9%94%AE%E5%8C%BA%E5%88%AB/"/>
    <id>http://linjin101.com/2017/03/07/HTML4 和 HTML5 的10个关键区别/</id>
    <published>2017-03-06T16:33:14.000Z</published>
    <updated>2017-03-14T13:57:10.541Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://static.oschina.net/uploads/files/html5.png" alt="image">HTML5是HTML标准的下一个版本。<br>越来越多的程序员开始HTML5来构建网站。 如果你同时使用HTML4和HTML5的话，你会发现用HTML5从头构建，<br>比从HTML4迁移到HTML5要方便很多。 虽然HTML5没有完全颠覆HTML4，它们还是有很多相似之处，但是它们</p>
<h2 id="也有一些关键的不同。本文就列出了它们之间10个关键的不同之处。"><a href="#也有一些关键的不同。本文就列出了它们之间10个关键的不同之处。" class="headerlink" title="也有一些关键的不同。本文就列出了它们之间10个关键的不同之处。"></a>也有一些关键的不同。本文就列出了它们之间10个关键的不同之处。</h2><h4 id="1-HTML5-标准还在制定中"><a href="#1-HTML5-标准还在制定中" class="headerlink" title="1. HTML5 标准还在制定中"></a>1. HTML5 标准还在制定中</h4><p>首先要注意的是，HTML5虽然现在很火，但是HTML5标准还在制定中，标准仍在改变。HTML4已经10多年了，不会有任何改变了。</p>
<h4 id="2-简化的语法"><a href="#2-简化的语法" class="headerlink" title="2. 简化的语法"></a>2. 简化的语法</h4><p>HTML5简化了很多细微的语法，例如doctype的声明，你只需要写!doctype html就行了。HTML5与HTML5，XHTML1兼容，但是与SGML不兼容。</p>
<h4 id="3-canvas-标签替代Flash"><a href="#3-canvas-标签替代Flash" class="headerlink" title="3. canvas 标签替代Flash"></a>3. canvas 标签替代Flash</h4><p>Flash给很多Web开发者带来了麻烦，要在网页上播放Flash需要一堆代码和插件。canvas标签使得开发者只要使用一个标签就 能和用户产生UI交互。虽然目前canvas标签还不能实现Flash的所有功能，但是很快canvas就会让 Flash看起来老土，哈哈！</p>
<h4 id="4-新增-heade-和-footer-标签"><a href="#4-新增-heade-和-footer-标签" class="headerlink" title="4. 新增 heade 和 footer 标签"></a>4. 新增 heade 和 footer 标签</h4><p>HTML5设计的一个原则是更好的体现网站的语义性，所以增加了header和footer这样的标签，用来明确表示网页的结构。</p>
<h4 id="5-新增-section-和-article-标签"><a href="#5-新增-section-和-article-标签" class="headerlink" title="5. 新增 section 和 article 标签"></a>5. 新增 section 和 article 标签</h4><p>与 header , footer类似，section和article也有利于清晰化网页的结构，更有利于SEO。</p>
<h4 id="6-新增-menu-和-figure-标签"><a href="#6-新增-menu-和-figure-标签" class="headerlink" title="6. 新增 menu 和 figure 标签"></a>6. 新增 menu 和 figure 标签</h4><p>menu可以被用于创建传统的菜单，也可以用于工具栏和上下文菜单。figure标签使得网页文字和图片的排版更专业。</p>
<h4 id="7-新增-audio-和-video-标签"><a href="#7-新增-audio-和-video-标签" class="headerlink" title="7. 新增 audio 和 video 标签"></a>7. 新增 audio 和 video 标签</h4><p>这两个标签可能是HTML5里面最有用的两个标签了。顾名思义，这两个标签是用来播放音频和视频的。</p>
<h4 id="8-全新的表单"><a href="#8-全新的表单" class="headerlink" title="8. 全新的表单"></a>8. 全新的表单</h4><p>HTML5对 form 和 forminput 标签进行了大量修改，添加了很多新的属性，也修改了很多属性。</p>
<h4 id="9-删除-b-和-font-标签"><a href="#9-删除-b-和-font-标签" class="headerlink" title="9. 删除 b 和 font 标签"></a>9. 删除 b 和 font 标签</h4><p>这个改进我还无法理解。我不认为删除这两个标签对代码的改进有很大的帮助。官方的解释是应该用CSS来替代这两个标签。但我还是觉得对于简单的文本，这两个标签还是很方便的。</p>
<h4 id="10-删除-frame-center-big-标签"><a href="#10-删除-frame-center-big-标签" class="headerlink" title="10. 删除 frame , center , big 标签"></a>10. 删除 frame , center , big 标签</h4><p>我已经记不得上次是什么时候使用这些标签了。</p>
<p>以上十点只是HTML5和HTML4差别的很小一部分，最<br>新最全的HTML5-HTML4对比信息请看 <a href="http://dev.w3.org/html5/html4-differences/" target="_blank" rel="external">http://dev.w3.org/html5/html4-differences/</a></p>
<hr>
<p>文章转载自 开源中国社区 [<a href="http://www.oschina.net" target="_blank" rel="external">http://www.oschina.net</a>]<br>本文标题：HTML4 和 HTML5 的10个关键区别<br>本文地址：<a href="https://www.oschina.net/news/22219/html4-html5-differences" target="_blank" rel="external">https://www.oschina.net/news/22219/html4-html5-differences</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://static.oschina.net/uploads/files/html5.png&quot; alt=&quot;image&quot;&gt;HTML5是HTML标准的下一个版本。&lt;br&gt;越来越多的程序员开始HTML5来构建网站。 如果你同时使用HTML4和HTML5
    
    </summary>
    
      <category term="HTML" scheme="http://linjin101.com/categories/HTML/"/>
    
    
      <category term="HTML4" scheme="http://linjin101.com/tags/HTML4/"/>
    
      <category term="HTML5" scheme="http://linjin101.com/tags/HTML5/"/>
    
  </entry>
  
  <entry>
    <title>在github上创建新分支</title>
    <link href="http://linjin101.com/2017/03/07/%E5%9C%A8github%E4%B8%8A%E5%88%9B%E5%BB%BA%E6%96%B0%E5%88%86%E6%94%AF/"/>
    <id>http://linjin101.com/2017/03/07/在github上创建新分支/</id>
    <published>2017-03-06T16:33:14.000Z</published>
    <updated>2017-03-14T13:57:10.545Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://note.youdao.com/" target="_blank" rel="external">http://blog.csdn.net/guang11cheng/article/details/37757201</a><br><a href="http://note.youdao.com/" target="_blank" rel="external">http://blog.csdn.net/top_code/article/details/51931916</a><br><a href="http://note.youdao.com/" target="_blank" rel="external">http://www.cnblogs.com/horanly/p/6265182.html
</a></p>
<p>在github上创建仓库：<br><code>Create a new repository on the command line</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">touch README.md</div><div class="line">git init</div><div class="line">git add README.md</div><div class="line">git commit -m &quot;first commit&quot;</div><div class="line">git remote add origin https://github.com/BrentHuang/MyRepo.git</div><div class="line">git push -u origin master</div></pre></td></tr></table></figure>
<p>在本地新建一个分支： <code>git branch Branch1</code><br>切换到你的新分支: <code>git checkout Branch1</code><br>将新分支发布在github上： <code>git push origin Branch1</code><br>在本地删除一个分支： <code>git branch -d Branch1</code><br>在github远程端删除一个分支： <code>git push origin :Branch1</code><br>(分支名前的冒号代表删除)</p>
<p>直接使用git pull和git push的设置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Git branch --set-upstream-to=origin/master master </div><div class="line">git branch --set-upstream-to=origin/ThirdParty ThirdParty</div><div class="line">git config --global push.default matching</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://note.youdao.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/guang11cheng/article/details/37757201&lt;/a&gt;&lt;br&gt;&lt;a hre
    
    </summary>
    
      <category term="git" scheme="http://linjin101.com/categories/git/"/>
    
    
      <category term="github" scheme="http://linjin101.com/tags/github/"/>
    
      <category term="建新分支" scheme="http://linjin101.com/tags/%E5%BB%BA%E6%96%B0%E5%88%86%E6%94%AF/"/>
    
  </entry>
  
  <entry>
    <title>blog-frist hexo配置问题</title>
    <link href="http://linjin101.com/2017/03/07/blog-frist%20hexo%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/"/>
    <id>http://linjin101.com/2017/03/07/blog-frist hexo配置问题/</id>
    <published>2017-03-06T16:33:14.000Z</published>
    <updated>2017-03-14T13:57:10.541Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://note.youdao.com/" target="_blank" rel="external">https://www.zhihu.com/question/38219432</a></p>
<p>贴上一篇我之前搭建博客时，参考的教程</p>
<h2 id="引用自：Xuanwo’s-Blog-史上最详细的Hexo博客搭建图文教程"><a href="#引用自：Xuanwo’s-Blog-史上最详细的Hexo博客搭建图文教程" class="headerlink" title="引用自：Xuanwo’s Blog// 史上最详细的Hexo博客搭建图文教程 "></a>引用自：Xuanwo’s Blog// 史上最详细的Hexo博客搭建图文教程 </h2><p>配置Deployment首先，你需要为自己配置身份信息，打开命令行，然后输入：<br>git config –global user.name “yourname”<br>git config –global user.email “youremail”<br>同样在_config.yml文件中，找到Deployment，然后按照如下修改：<br>deploy:<br>type: git<br>repo: git@github.com:yourname/yourname.github.io.git<br>branch: master<br>如果使用git方式进行部署，执行npm install hexo-deployer-git –save来安装所需的插件<br>然后在当前目录打开命令行，输入：<br>hexo d</p>
<h2 id="随后按照提示，分别输入自己的Github账号用户名和密码，开始上传。"><a href="#随后按照提示，分别输入自己的Github账号用户名和密码，开始上传。" class="headerlink" title="随后按照提示，分别输入自己的Github账号用户名和密码，开始上传。"></a>随后按照提示，分别输入自己的Github账号用户名和密码，开始上传。</h2><p>你看看会不会是这边的配置出现了问题。</p>
<p>作者：孙武军<br>链接：<a href="https://www.zhihu.com/question/38219432/answer/75389052" target="_blank" rel="external">https://www.zhihu.com/question/38219432/answer/75389052</a><br>来源：知乎<br>著作权归作者所有，转载请联系作者获得授权。</p>
<p>=======================================================</p>
<p>提交项目，部署</p>
<p>继续在本目录命令行<br>安装部署工具（方便以后更新）<br><code>npm install hexo-deployer-git -save</code><br>1、初始化本地仓库：<br><code>git init</code><br>2、连接远程仓库：<br>如果是第一次使用git，在使用git的时候会提示输入用户名和密码，用户名是自己的注册邮箱。<br><code>git remote add origin https://github.com/wapchief/wapchief.github.io.git</code><br>3、发布hexo到github page<br><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code><br>4、添加文件到本地仓库<br><code>git add</code><br>5、提交声明<br><code>git commit -m &#39;内容&#39;</code><br>6、推送到远程仓库（github）<br><code>git push origin</code><br>这里建议创建一个新的分支hexo，用于管理hexo文件。   提交的的时候只提交hexo网站html、css、等源文件。而默认的master用来部署更新项目,具体可以看我的github地址分支情况<a href="https://github.com/wapchief/wapchief.github.io" target="_blank" rel="external">https://github.com/wapchief/wapchief.github.io</a><br>创建并切换到新建分支：<br>git checkout -b hexo<br>将分支推送到远程仓库：<br>git push origin hexo<br>这时打开网站就能看到效果了。<br>记得提交以后去github上把hexo分支设置默认，以后写文章等都要部署。<br>文章在hexo目录下的\source_posts文件夹中，是md格式，也就是Markdown格式。<br>以后可以用以下命令部署。也就是第三步</p>
<p>//等于一次性执行了，清空、刷新、部署三个命令<br><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code><br>如果部署时不clean，可能之前修改的文章还存在。包括一些配置等，有时候部署完成后并没有改变，其实是缓存未清除。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://note.youdao.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.zhihu.com/question/38219432&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;贴上一篇我之前搭建博客时，参考的教程&lt;/p
    
    </summary>
    
      <category term="hexo" scheme="http://linjin101.com/categories/hexo/"/>
    
    
      <category term="hexo配置问题" scheme="http://linjin101.com/tags/hexo%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>hexo部署后，CNAME会被自动删除，怎么办？</title>
    <link href="http://linjin101.com/2017/03/07/hexo%E9%83%A8%E7%BD%B2%E5%90%8E%EF%BC%8CCNAME%E4%BC%9A%E8%A2%AB%E8%87%AA%E5%8A%A8%E5%88%A0%E9%99%A4%EF%BC%8C%E6%80%8E%E4%B9%88%E5%8A%9E%EF%BC%9F/"/>
    <id>http://linjin101.com/2017/03/07/hexo部署后，CNAME会被自动删除，怎么办？/</id>
    <published>2017-03-06T16:33:14.000Z</published>
    <updated>2017-03-14T13:57:10.544Z</updated>
    
    <content type="html"><![CDATA[<p>将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等。</p>
<p>如图：<br>CNAME README都可以放在Source文件夹下，每次上传就不会消失了</p>
<p><img src="https://pic4.zhimg.com/93a311be4f651f8cd639233e544b826b_b.jpg" alt="image"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等。&lt;/p&gt;
&lt;p&gt;如图：&lt;br&gt;CNAME README都可以放在Source文件夹下，每次上传就不会消失了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pic
    
    </summary>
    
      <category term="hexo" scheme="http://linjin101.com/categories/hexo/"/>
    
    
      <category term="hexo部署" scheme="http://linjin101.com/tags/hexo%E9%83%A8%E7%BD%B2/"/>
    
      <category term="CNAME" scheme="http://linjin101.com/tags/CNAME/"/>
    
  </entry>
  
  <entry>
    <title>hexo安装配置</title>
    <link href="http://linjin101.com/2017/03/06/hexo%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>http://linjin101.com/2017/03/06/hexo安装配置/</id>
    <published>2017-03-06T15:46:55.000Z</published>
    <updated>2017-03-14T13:57:10.544Z</updated>
    
    <content type="html"><![CDATA[<p>win10安装报错,提示需要管理员账户.<br>后来修改权限半天,而且也切换管理员账户还是出错.误解搜索错误解决办法,最后替换淘宝的源解决问题.<br>报错:</p>
<pre><code>$ npm install hexo-cli -g
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules\hexo-cli\node_modules\chokidar\node_modules\fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.1: wanted {&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;} (current: {&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;})
npm ERR! Windows_NT 10.0.14393
npm ERR! argv &quot;D:\\nodejs\\node.exe&quot; &quot;D:\\nodejs\\node_modules\\npm\\bin\\npm-cli.js&quot; &quot;install&quot; &quot;hexo-cli&quot; &quot;-g&quot;
npm ERR! node v6.10.0
npm ERR! npm  v3.10.10
npm ERR! path C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli
npm ERR! code EPERM
npm ERR! errno -4048
npm ERR! syscall rename

npm ERR! Error: EPERM: operation not permitted, rename &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli&apos; -&gt; &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\.hexo-cli.DELETE&apos;
npm ERR!     at moveAway (D:\nodejs\node_modules\npm\lib\install\action\finalize.js:38:5)
npm ERR!     at destStatted (D:\nodejs\node_modules\npm\lib\install\action\finalize.js:27:7)
npm ERR!     at D:\nodejs\node_modules\npm\node_modules\graceful-fs\polyfills.js:267:18
npm ERR!     at FSReqWrap.oncomplete (fs.js:123:15)
npm ERR!
npm ERR! Error: EPERM: operation not permitted, rename &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli&apos; -&gt; &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\.hexo-cli.DELETE&apos;
npm ERR!     at Error (native)
npm ERR!  Error: EPERM: operation not permitted, rename &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli&apos; -&gt; &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\.hexo-cli.DELETE&apos;
npm ERR!     at moveAway (D:\nodejs\node_modules\npm\lib\install\action\finalize.js:38:5)
npm ERR!     at destStatted (D:\nodejs\node_modules\npm\lib\install\action\finalize.js:27:7)
npm ERR!     at D:\nodejs\node_modules\npm\node_modules\graceful-fs\polyfills.js:267:18
npm ERR!     at FSReqWrap.oncomplete (fs.js:123:15)
npm ERR!
npm ERR! Error: EPERM: operation not permitted, rename &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli&apos; -&gt; &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\.hexo-cli.DELETE&apos;
npm ERR!     at Error (native)
npm ERR!
npm ERR! Please try running this command again as root/Administrator.

npm ERR! Please include the following file with any support request:
npm ERR!     E:\git\hexo\npm-debug.log
</code></pre><p>后来执行下面语句安装成功hexo<br><code>npm install -g hexo --registry=https://registry.npm.taobao.org</code></p>
<p>淘宝 NPM 镜像<br><a href="http://note.youdao.com/" target="_blank" rel="external">http://npm.taobao.org/</a><br>镜像使用方法（三种办法任意一种都能解决问题，建议使用第三种，将配置写死，下次用的时候配置还在）:  </p>
<p><strong>1.通过config命令</strong><br>npm config set registry <a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a><br>npm info underscore<br>（如果上面配置正确这个命令会有字符串response）  </p>
<p><strong>2.命令行指定</strong><br>npm –registry <a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a> info underscore   </p>
<p><strong>3.编辑 ~/.npmrc 加入下面内容</strong><br>registry = <a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a>  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;win10安装报错,提示需要管理员账户.&lt;br&gt;后来修改权限半天,而且也切换管理员账户还是出错.误解搜索错误解决办法,最后替换淘宝的源解决问题.&lt;br&gt;报错:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm install hexo-cli -g
npm WARN optiona
    
    </summary>
    
      <category term="hexo" scheme="http://linjin101.com/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>github配置</title>
    <link href="http://linjin101.com/2017/03/06/git%E6%97%A0%E6%B3%95pull%E4%BB%93%E5%BA%93/"/>
    <id>http://linjin101.com/2017/03/06/git无法pull仓库/</id>
    <published>2017-03-06T15:46:55.000Z</published>
    <updated>2017-03-14T13:57:10.543Z</updated>
    
    <content type="html"><![CDATA[<p>git无法pull仓库refusing to merge unrelated histories</p>
<p><a href="http://note.youdao.com/" target="_blank" rel="external">http://blog.csdn.net/lindexi_gd/article/details/52554159</a></p>
<p>本文讲的是把Git在最新2.9.2，合并pull两个不同的项目，出现的问题如何去解决fatal: refusing to merge unrelated histories</p>
<p>我在Github新建一个仓库，写了License，然后把本地一个写了很久仓库上传。</p>
<p>先pull，因为两个仓库不同，发现refusing to merge unrelated histories，无法pull</p>
<p>因为他们是两个不同的项目，要把两个不同的项目合并，git需要添加一句代码，在git pull，这句代码是在git 2.9.2版本发生的，最新的版本需要添加–allow-unrelated-histories</p>
<p>假如我们的源是origin，分支是master，那么我们 需要这样写<br><code>git pull origin master --allow-unrelated-histories</code><br>需要知道，我们的源可以是本地的路径</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;git无法pull仓库refusing to merge unrelated histories&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://note.youdao.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn
    
    </summary>
    
      <category term="hexo" scheme="http://linjin101.com/categories/hexo/"/>
    
    
      <category term="github报错" scheme="http://linjin101.com/tags/github%E6%8A%A5%E9%94%99/"/>
    
  </entry>
  
  <entry>
    <title>github配置折腾步骤</title>
    <link href="http://linjin101.com/2017/03/06/github%E9%85%8D%E7%BD%AE%E6%8A%98%E8%85%BE%E6%AD%A5%E9%AA%A4/"/>
    <id>http://linjin101.com/2017/03/06/github配置折腾步骤/</id>
    <published>2017-03-06T15:46:55.000Z</published>
    <updated>2017-03-14T13:57:10.542Z</updated>
    
    <content type="html"><![CDATA[<p>win10安装报错,提示需要管理员账户.<br>后来修改权限半天,而且也切换管理员账户还是出错.误解搜索错误解决办法,最后替换淘宝的源解决问题.<br>报错:</p>
<pre><code>$ npm install hexo-cli -g
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules\hexo-cli\node_modules\chokidar\node_modules\fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.1: wanted {&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;} (current: {&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;})
npm ERR! Windows_NT 10.0.14393
npm ERR! argv &quot;D:\\nodejs\\node.exe&quot; &quot;D:\\nodejs\\node_modules\\npm\\bin\\npm-cli.js&quot; &quot;install&quot; &quot;hexo-cli&quot; &quot;-g&quot;
npm ERR! node v6.10.0
npm ERR! npm  v3.10.10
npm ERR! path C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli
npm ERR! code EPERM
npm ERR! errno -4048
npm ERR! syscall rename

npm ERR! Error: EPERM: operation not permitted, rename &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli&apos; -&gt; &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\.hexo-cli.DELETE&apos;
npm ERR!     at moveAway (D:\nodejs\node_modules\npm\lib\install\action\finalize.js:38:5)
npm ERR!     at destStatted (D:\nodejs\node_modules\npm\lib\install\action\finalize.js:27:7)
npm ERR!     at D:\nodejs\node_modules\npm\node_modules\graceful-fs\polyfills.js:267:18
npm ERR!     at FSReqWrap.oncomplete (fs.js:123:15)
npm ERR!
npm ERR! Error: EPERM: operation not permitted, rename &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli&apos; -&gt; &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\.hexo-cli.DELETE&apos;
npm ERR!     at Error (native)
npm ERR!  Error: EPERM: operation not permitted, rename &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli&apos; -&gt; &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\.hexo-cli.DELETE&apos;
npm ERR!     at moveAway (D:\nodejs\node_modules\npm\lib\install\action\finalize.js:38:5)
npm ERR!     at destStatted (D:\nodejs\node_modules\npm\lib\install\action\finalize.js:27:7)
npm ERR!     at D:\nodejs\node_modules\npm\node_modules\graceful-fs\polyfills.js:267:18
npm ERR!     at FSReqWrap.oncomplete (fs.js:123:15)
npm ERR!
npm ERR! Error: EPERM: operation not permitted, rename &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\hexo-cli&apos; -&gt; &apos;C:\Users\linjin101\AppData\Roaming\npm\node_modules\.hexo-cli.DELETE&apos;
npm ERR!     at Error (native)
npm ERR!
npm ERR! Please try running this command again as root/Administrator.

npm ERR! Please include the following file with any support request:
npm ERR!     E:\git\hexo\npm-debug.log
</code></pre><p>后来执行下面语句安装成功hexo<br><code>npm install -g hexo --registry=https://registry.npm.taobao.org</code></p>
<p>淘宝 NPM 镜像<br><a href="http://note.youdao.com/" target="_blank" rel="external">http://npm.taobao.org/</a><br>镜像使用方法（三种办法任意一种都能解决问题，建议使用第三种，将配置写死，下次用的时候配置还在）:  </p>
<p><strong>1.通过config命令</strong><br>npm config set registry <a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a><br>npm info underscore<br>（如果上面配置正确这个命令会有字符串response）  </p>
<p><strong>2.命令行指定</strong><br>npm –registry <a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a> info underscore   </p>
<p><strong>3.编辑 ~/.npmrc 加入下面内容</strong><br>registry = <a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a>  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;win10安装报错,提示需要管理员账户.&lt;br&gt;后来修改权限半天,而且也切换管理员账户还是出错.误解搜索错误解决办法,最后替换淘宝的源解决问题.&lt;br&gt;报错:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm install hexo-cli -g
npm WARN optiona
    
    </summary>
    
      <category term="hexo" scheme="http://linjin101.com/categories/hexo/"/>
    
    
      <category term="github报错" scheme="http://linjin101.com/tags/github%E6%8A%A5%E9%94%99/"/>
    
  </entry>
  
  <entry>
    <title>git无法pull仓库</title>
    <link href="http://linjin101.com/2017/03/06/git%E6%97%A0%E6%B3%95pull%E4%BB%93%E5%BA%93refusing%20to%20merge%20unrelated%20histories/"/>
    <id>http://linjin101.com/2017/03/06/git无法pull仓库refusing to merge unrelated histories/</id>
    <published>2017-03-06T15:46:55.000Z</published>
    <updated>2017-03-14T13:57:10.543Z</updated>
    
    <content type="html"><![CDATA[<p>git无法pull仓库refusing to merge unrelated histories</p>
<p><a href="http://note.youdao.com/" target="_blank" rel="external">http://blog.csdn.net/lindexi_gd/article/details/52554159</a></p>
<p>本文讲的是把Git在最新2.9.2，合并pull两个不同的项目，出现的问题如何去解决fatal: refusing to merge unrelated histories</p>
<p>我在Github新建一个仓库，写了License，然后把本地一个写了很久仓库上传。</p>
<p>先pull，因为两个仓库不同，发现refusing to merge unrelated histories，无法pull</p>
<p>因为他们是两个不同的项目，要把两个不同的项目合并，git需要添加一句代码，在git pull，这句代码是在git 2.9.2版本发生的，最新的版本需要添加–allow-unrelated-histories</p>
<p>假如我们的源是origin，分支是master，那么我们 需要这样写<br><code>git pull origin master --allow-unrelated-histories</code><br>需要知道，我们的源可以是本地的路径</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;git无法pull仓库refusing to merge unrelated histories&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://note.youdao.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn
    
    </summary>
    
      <category term="git" scheme="http://linjin101.com/categories/git/"/>
    
    
      <category term="git无法pull" scheme="http://linjin101.com/tags/git%E6%97%A0%E6%B3%95pull/"/>
    
  </entry>
  
</feed>
